% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/realtime_Alert.R, R/realtime_TripUpdate.R,
%   R/realtime_VehiclePosition.R
\name{realtime_Alert}
\alias{realtime_Alert}
\alias{realtime_TripUpdate}
\alias{realtime_VehiclePosition}
\title{Read a gtfs-realtime feed}
\usage{
realtime_Alert(FeedMessage)

realtime_TripUpdate(FeedMessage)

realtime_VehiclePosition(FeedMessage)
}
\arguments{
\item{FeedMessage}{Message of type 'transit_realtime.FeedMessage'. Intended to be from \code{\link{read_gtfsrealtime}}.}
}
\value{
List of data.frames.
}
\description{
Processes a gtfs-realtime message into a list of data.frames. Can be Alert, TripUpdate, or VehiclePosition feed.
}
\details{
Creates a data.frame() defined by a preset template of \code{\link{get_field}} and \code{\link{get_field_list}}s for each feed as set out by \url{https://gtfs.org/documentation/realtime/reference/}. It iterates over \code{transit_realtime.FeedEntity} and returns them all in a separate row in a data.frame. Using the wrong function (e.g. \code{\link{realtime_VehiclePosition}} with a TripUpdate feed) will generally result in a largely empty dataset.
}
\examples{
\dontrun{

# Generic GTFS-realtime VehiclePosition feed
api_call |>
  read_gtfsrealtime() |>
  realtime_VehiclePosition() |>
  # Optional, but recommended
  dplyr::bind_rows()

# Cairns SunBus (api currently does not require registration)

sunbus_cairns_url <- "https://gtfsrt.api.translink.com.au/api/realtime/CNS/TripUpdates"

sunbus_cairns_api_call <- sunbus_cairns_url |>
  httr2::request() |>
  httr2::req_method("GET") |>
  httr2::req_perform()

sunbus_cairns_message <- sunbus_cairns_apicall |>
  read_gtfsrealtime()

sunbus_cairns <- sunbus_cairns_message |>
  realtime_TripUpdate() |>
  dplyr::bind_rows()

sunbus_cairns
}
}
